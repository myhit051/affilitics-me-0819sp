// Facebook API Console Test - Simple Version
// Copy ‡πÅ‡∏•‡∏∞ paste ‡πÉ‡∏ô browser console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö Facebook API

console.log('üöÄ Facebook API Console Tester ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß!');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
async function testConfig() {
  console.log('üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Facebook API...');
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment variables (‡πÉ‡∏ô development mode)
  const hasConfig = window.location.hostname === 'localhost';
  
  if (hasConfig) {
    console.log('‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡πÉ‡∏ô development mode - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ');
    console.log('üìã App ID: 1138045931679611 (configured)');
    console.log('üìã API Version: v19.0');
    console.log('üìã Redirect URI: http://localhost:8080/auth/facebook/callback');
    console.log('üìã Scopes: ads_read,ads_management');
    return true;
  } else {
    console.log('‚ö†Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡πÉ‡∏ô production mode - ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏î‡πâ');
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API
async function testConnection(accessToken) {
  console.log('üîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Facebook API...');
  
  if (!accessToken) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Access Token');
    console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: testConnection("YOUR_ACCESS_TOKEN")');
    return false;
  }
  
  try {
    const response = await fetch(`https://graph.facebook.com/v19.0/me?access_token=${accessToken}`);
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Facebook API ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      console.log('üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', data.name, '(ID:', data.id, ')');
      return data;
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Facebook API ‡πÑ‡∏î‡πâ');
      console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', data.error?.message || 'Unknown error');
      return false;
    }
  } catch (error) {
    console.log('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:', error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ad Accounts
async function testAdAccounts(accessToken) {
  console.log('üìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ad Accounts...');
  
  if (!accessToken) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Access Token');
    return false;
  }
  
  try {
    const response = await fetch(
      `https://graph.facebook.com/v19.0/me/adaccounts?fields=id,name,account_status,currency,timezone_name&access_token=${accessToken}`
    );
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ ‡∏û‡∏ö Ad Accounts ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${data.data?.length || 0} accounts`);
      
      if (data.data?.length > 0) {
        console.log('üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Ad Accounts:');
        data.data.forEach((account, index) => {
          console.log(`  ${index + 1}. ${account.name} (${account.id}) - ${account.account_status}`);
        });
        return data.data;
      } else {
        console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Ad Accounts');
        return [];
      }
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ad Accounts ‡πÑ‡∏î‡πâ');
      console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', data.error?.message || 'Unknown error');
      return false;
    }
  } catch (error) {
    console.log('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Ad Accounts:', error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Campaigns
async function testCampaigns(accessToken, accountId) {
  console.log(`üéØ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Campaigns ‡∏à‡∏≤‡∏Å Account ${accountId}...`);
  
  if (!accessToken || !accountId) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Access Token ‡∏´‡∏£‡∏∑‡∏≠ Account ID');
    return false;
  }
  
  try {
    const response = await fetch(
      `https://graph.facebook.com/v19.0/${accountId}/campaigns?fields=id,name,status,objective,created_time&limit=5&access_token=${accessToken}`
    );
    const data = await response.json();
    
    if (response.ok) {
      console.log(`‚úÖ ‡∏û‡∏ö Campaigns ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${data.data?.length || 0} campaigns`);
      
      if (data.data?.length > 0) {
        console.log('üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Campaigns:');
        data.data.forEach((campaign, index) => {
          console.log(`  ${index + 1}. ${campaign.name} (${campaign.id}) - ${campaign.status}`);
        });
        return data.data;
      } else {
        console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Campaigns');
        return [];
      }
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Campaigns ‡πÑ‡∏î‡πâ');
      console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', data.error?.message || 'Unknown error');
      return false;
    }
  } catch (error) {
    console.log('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Campaigns:', error.message);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
async function quickTest(accessToken) {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Facebook API ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢...');
  console.log('='.repeat(50));
  
  // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
  const configOk = await testConfig();
  
  if (!accessToken) {
    console.log('\n‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö Access Token - ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö API');
    console.log('üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: quickTest("YOUR_ACCESS_TOKEN")');
    console.log('\nüìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö Access Token:');
    console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://developers.facebook.com/tools/explorer/');
    console.log('2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å App ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì');
    console.log('3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å permissions: ads_read, ads_management');
    console.log('4. ‡∏Ñ‡∏•‡∏¥‡∏Å "Generate Access Token"');
    console.log('5. Copy token ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    return;
  }
  
  // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
  const connectionResult = await testConnection(accessToken);
  if (!connectionResult) {
    console.log('\n‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
    return;
  }
  
  // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Ad Accounts
  const accounts = await testAdAccounts(accessToken);
  if (!accounts || accounts.length === 0) {
    console.log('\n‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏µ‡πà Ad Accounts');
    return;
  }
  
  // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Campaigns (‡πÉ‡∏ä‡πâ account ‡πÅ‡∏£‡∏Å)
  const firstAccount = accounts[0];
  const campaigns = await testCampaigns(accessToken, firstAccount.id);
  
  // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
  console.log('='.repeat(50));
  console.log(`‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: ${configOk ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`);
  console.log(`‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: ${connectionResult ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`);
  console.log(`‚úÖ Ad Accounts: ${accounts ? accounts.length + ' accounts' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`);
  console.log(`‚úÖ Campaigns: ${campaigns ? campaigns.length + ' campaigns' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`);
  
  if (connectionResult && accounts && accounts.length > 0) {
    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Facebook ‡∏à‡∏£‡∏¥‡∏á');
  } else {
    console.log('\n‚ö†Ô∏è ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á');
  }
}

// Export functions to global scope
window.testConfig = testConfig;
window.testConnection = testConnection;
window.testAdAccounts = testAdAccounts;
window.testCampaigns = testCampaigns;
window.quickTest = quickTest;

console.log('\nüìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
console.log('1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢: quickTest("YOUR_ACCESS_TOKEN")');
console.log('2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô:');
console.log('   - testConfig()');
console.log('   - testConnection("ACCESS_TOKEN")');
console.log('   - testAdAccounts("ACCESS_TOKEN")');
console.log('   - testCampaigns("ACCESS_TOKEN", "ACCOUNT_ID")');
console.log('\nüöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢: quickTest("YOUR_ACCESS_TOKEN")');