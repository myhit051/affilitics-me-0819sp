import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { 
  Sparkles, 
  Brain,
  TrendingUp, 
  Target, 
  AlertTriangle,
  CheckCircle,
  BarChart3,
  Lightbulb,
  Zap,
  RefreshCw,
  Settings,
  Download
} from "lucide-react";
import { useImportedData } from "@/hooks/useImportedData";
import AIInsightsPanel from "@/components/AIInsightsPanel";
import PredictionChart from "@/components/PredictionChart";
import RecommendationCard, { RecommendationData } from "@/components/RecommendationCard";

// Mock recommendations data (will be replaced with real AI service)
const mockRecommendations: RecommendationData[] = [
  {
    id: '1',
    type: 'budget',
    title: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì Sub ID: SP001',
    description: 'Sub ID ‡∏ô‡∏µ‡πâ‡∏°‡∏µ ROI ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (245%) ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö 30% ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡πÑ‡∏£',
    impact: 'high',
    confidence: 92,
    expectedROI: 245,
    priority: 3,
    details: [
      'ROI ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: 245% (‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 89%)',
      'Conversion rate: 8.5% (‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 3.2%)',
      'Cost per order: ‡∏ø85 (‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 45%)',
      '‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏° 7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 15%'
    ],
    actionItems: [
      '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏à‡∏≤‡∏Å ‡∏ø5,000 ‡πÄ‡∏õ‡πá‡∏ô ‡∏ø6,500 ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô',
      '‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á peak hours (14:00-18:00)',
      '‡∏ó‡∏î‡∏™‡∏≠‡∏ö creative ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö top performing ads',
      '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏á‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û'
    ]
  },
  {
    id: '2',
    type: 'platform',
    title: '‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå Facebook Ads',
    description: '‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û Facebook Ads ‡∏•‡∏î‡∏•‡∏á 15% ‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å CPM ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡∏∞ CTR ‡∏•‡∏î‡∏•‡∏á',
    impact: 'medium',
    confidence: 78,
    expectedROI: -15,
    priority: 2,
    details: [
      'CPM ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 25% ‡∏à‡∏≤‡∏Å ‡∏ø45 ‡πÄ‡∏õ‡πá‡∏ô ‡∏ø56',
      'CTR ‡∏•‡∏î‡∏•‡∏á 18% ‡∏à‡∏≤‡∏Å 2.8% ‡πÄ‡∏õ‡πá‡∏ô 2.3%',
      'CPC ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô 32% ‡∏à‡∏≤‡∏Å ‡∏ø1.2 ‡πÄ‡∏õ‡πá‡∏ô ‡∏ø1.6',
      'Frequency ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 3.2 (‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)'
    ],
    actionItems: [
      '‡∏•‡∏î‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì Facebook Ads ‡∏•‡∏á 20% ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
      '‡∏™‡∏£‡πâ‡∏≤‡∏á creative ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î ad fatigue',
      '‡∏õ‡∏£‡∏±‡∏ö targeting ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤ audience ‡πÉ‡∏´‡∏°‡πà',
      '‡∏ó‡∏î‡∏™‡∏≠‡∏ö placement ‡πÉ‡∏´‡∏°‡πà (Stories, Reels)',
      '‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ Shopee/Lazada Ads ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô'
    ]
  },
  {
    id: '3',
    type: 'timing',
    title: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ Golden Hours',
    description: '‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡πà‡∏ß‡∏á 14:00-18:00 ‡∏°‡∏µ conversion rate ‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 35% ‡πÅ‡∏ï‡πà‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠',
    impact: 'medium',
    confidence: 85,
    expectedROI: 35,
    priority: 2,
    details: [
      'Conversion rate ‡∏ä‡πà‡∏ß‡∏á 14:00-18:00: 6.8%',
      'Conversion rate ‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô: 4.2%',
      '‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ: 25% ‡∏Ç‡∏≠‡∏á‡∏á‡∏ö‡∏£‡∏ß‡∏°',
      '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏û‡∏•‡∏≤‡∏î: ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 45 orders ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô'
    ],
    actionItems: [
      '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ä‡πà‡∏ß‡∏á 14:00-18:00 ‡πÄ‡∏õ‡πá‡∏ô 40% ‡∏Ç‡∏≠‡∏á‡∏á‡∏ö‡∏£‡∏ß‡∏°',
      '‡∏ï‡∏±‡πâ‡∏á dayparting ‡πÉ‡∏ô Facebook Ads Manager',
      '‡∏õ‡∏£‡∏±‡∏ö bid strategy ‡πÄ‡∏õ‡πá‡∏ô highest volume ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ',
      '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° performance ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ'
    ]
  },
  {
    id: '4',
    type: 'subid',
    title: '‡∏´‡∏¢‡∏∏‡∏î Sub ID ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô: FB002',
    description: 'Sub ID FB002 ‡∏°‡∏µ ROI ‡∏ï‡∏¥‡∏î‡∏•‡∏ö -12% ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÅ‡∏¢‡πà‡∏•‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏£‡∏´‡∏¢‡∏∏‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
    impact: 'high',
    confidence: 88,
    expectedROI: -12,
    priority: 3,
    details: [
      'ROI ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: -12% (‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô ‡∏ø2,400 ‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô)',
      'Cost per order: ‡∏ø180 (‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 95%)',
      'Conversion rate: 1.8% (‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 57%)',
      '‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°: ‡πÅ‡∏¢‡πà‡∏•‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á 3 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå'
    ],
    actionItems: [
      '‡∏´‡∏¢‡∏∏‡∏î Sub ID FB002 ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏¢‡πà',
      '‡∏ó‡∏î‡∏™‡∏≠‡∏ö creative ‡πÅ‡∏•‡∏∞ targeting ‡πÉ‡∏´‡∏°‡πà',
      '‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô 3 ‡∏ß‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î‡∏ñ‡∏≤‡∏ß‡∏£',
      '‡∏ô‡∏≥‡∏á‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö Sub ID ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤'
    ]
  },
  {
    id: '5',
    type: 'creative',
    title: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Creative ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Lazada',
    description: 'Creative ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Lazada ‡∏°‡∏µ CTR ‡∏•‡∏î‡∏•‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏£‡πâ‡∏≤‡∏á creative ‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á',
    impact: 'low',
    confidence: 72,
    expectedROI: 18,
    priority: 1,
    details: [
      'CTR ‡∏•‡∏î‡∏•‡∏á 22% ‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤',
      'Creative ‡∏≠‡∏≤‡∏¢‡∏∏ 45 ‡∏ß‡∏±‡∏ô (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏±‡∏ô)',
      'Engagement rate ‡∏•‡∏î‡∏•‡∏á 15%',
      '‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡πÉ‡∏´‡∏°‡πà: Video ads ‡∏°‡∏µ performance ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ static 40%'
    ],
    actionItems: [
      '‡∏™‡∏£‡πâ‡∏≤‡∏á video creative 3-5 ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà',
      '‡πÉ‡∏ä‡πâ trending audio ‡πÅ‡∏•‡∏∞ effects',
      '‡∏ó‡∏î‡∏™‡∏≠‡∏ö UGC (User Generated Content) style',
      'A/B test ‡∏Å‡∏±‡∏ö creative ‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 7 ‡∏ß‡∏±‡∏ô',
      '‡πÄ‡∏Å‡πá‡∏ö creative ‡∏ó‡∏µ‡πà performance ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î'
    ]
  }
];

export default function AIOptimization() {
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [analysisProgress, setAnalysisProgress] = useState(0);
  const [selectedRecommendation, setSelectedRecommendation] = useState<string | null>(null);
  
  const { 
    hasData, 
    calculatedMetrics, 
    dailyMetrics,
    importedData 
  } = useImportedData();

  // Simulate AI analysis
  const runAIAnalysis = async () => {
    setIsAnalyzing(true);
    setAnalysisProgress(0);
    
    // Simulate progress
    const progressSteps = [
      { step: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...', progress: 20 },
      { step: '‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û Sub ID...', progress: 40 },
      { step: '‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö...', progress: 60 },
      { step: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥...', progress: 80 },
      { step: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!', progress: 100 }
    ];

    for (const { progress } of progressSteps) {
      await new Promise(resolve => setTimeout(resolve, 800));
      setAnalysisProgress(progress);
    }
    
    setTimeout(() => {
      setIsAnalyzing(false);
      setAnalysisProgress(0);
    }, 500);
  };

  const handleRecommendationAccept = (id: string) => {
    console.log('Accepted recommendation:', id);
    // TODO: Implement recommendation acceptance logic
  };

  const handleRecommendationReject = (id: string) => {
    console.log('Rejected recommendation:', id);
    // TODO: Implement recommendation rejection logic
  };

  const handleRecommendationFeedback = (id: string, feedback: 'positive' | 'negative') => {
    console.log('Feedback for recommendation:', id, feedback);
    // TODO: Implement feedback collection logic
  };

  const formatCurrency = (value: number) => {
    return value.toLocaleString('th-TH', { 
      minimumFractionDigits: 0, 
      maximumFractionDigits: 0 
    });
  };

  const getStatValue = (key: string, defaultValue: number = 0) => {
    if (hasData && calculatedMetrics) {
      const value = calculatedMetrics[key as keyof typeof calculatedMetrics];
      return typeof value === 'number' && !isNaN(value) ? value : defaultValue;
    }
    return defaultValue;
  };

  // Show empty state if no data
  if (!hasData) {
    return (
      <div className="space-y-6">
        <div className="text-center space-y-6 bg-card/95 backdrop-blur-lg p-12 rounded-3xl border-2 border-border/50 shadow-2xl max-w-2xl mx-auto">
          <div className="text-8xl animate-pulse">ü§ñ</div>
          <h2 className="text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
            AI Campaign Optimization
          </h2>
          <p className="text-lg text-muted-foreground max-w-lg leading-relaxed">
            ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ AI ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå
          </p>
          <div className="space-y-4">
            <Button 
              onClick={() => window.location.href = "/import"} 
              size="lg" 
              className="px-8 py-4 text-lg bg-gradient-to-r from-purple-500 to-blue-600 hover:from-purple-600 hover:to-blue-700 text-white font-semibold shadow-lg shadow-purple-500/25 transition-all duration-300 border-0"
            >
              <Brain className="mr-3 h-6 w-6" />
              ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ AI
            </Button>
            <div className="flex flex-wrap justify-center gap-3 mt-4">
              <Badge variant="secondary" className="bg-purple-500/10 text-purple-600 border-purple-500/20">
                üéØ Smart Recommendations
              </Badge>
              <Badge variant="secondary" className="bg-blue-500/10 text-blue-600 border-blue-500/20">
                üìà Performance Predictions
              </Badge>
              <Badge variant="secondary" className="bg-green-500/10 text-green-600 border-green-500/20">
                üí° Optimization Insights
              </Badge>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-3">
          <div className="p-3 rounded-xl bg-gradient-to-br from-purple-500/20 to-blue-600/20 border border-purple-500/30">
            <Brain className="h-8 w-8 text-purple-400" />
          </div>
          <div>
            <h1 className="text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
              AI Campaign Optimization
            </h1>
            <p className="text-muted-foreground">
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </p>
          </div>
        </div>
        
        <div className="flex items-center gap-3">
          <Button variant="outline" size="sm">
            <Settings className="h-4 w-4 mr-2" />
            ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ AI
          </Button>
          <Button variant="outline" size="sm">
            <Download className="h-4 w-4 mr-2" />
            Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
          </Button>
          <Button 
            onClick={runAIAnalysis}
            disabled={isAnalyzing}
            className="bg-gradient-to-r from-purple-500 to-blue-600 hover:from-purple-600 hover:to-blue-700"
          >
            {isAnalyzing ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" />
                ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...
              </>
            ) : (
              <>
                <RefreshCw className="h-4 w-4 mr-2" />
                ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÉ‡∏´‡∏°‡πà
              </>
            )}
          </Button>
        </div>
      </div>

      {/* Analysis Progress */}
      {isAnalyzing && (
        <Card className="border-purple-500/20 bg-gradient-to-r from-purple-500/5 to-blue-600/5">
          <CardContent className="p-6">
            <div className="flex items-center gap-4">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-500" />
              <div className="flex-1">
                <h3 className="font-medium mb-2">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ AI...</h3>
                <Progress value={analysisProgress} className="h-2" />
                <p className="text-sm text-muted-foreground mt-1">
                  {analysisProgress}% ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Key Metrics Overview */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card className="bg-gradient-to-br from-green-500/10 to-green-600/5">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-green-500/20">
                <TrendingUp className="h-5 w-5 text-green-600" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Overall ROI</p>
                <p className="text-2xl font-bold text-green-600">
                  {getStatValue('roi', 0).toFixed(1)}%
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-blue-500/10 to-blue-600/5">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-blue-500/20">
                <Target className="h-5 w-5 text-blue-600" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Active Sub IDs</p>
                <p className="text-2xl font-bold text-blue-600">
                  {importedData?.shopeeOrders?.length ? 
                    [...new Set([
                      ...importedData.shopeeOrders.map(o => o.sub_id),
                      ...importedData.lazadaOrders?.map(o => o['Sub ID']) || [],
                      ...importedData.facebookAds?.map(o => o['Sub ID']) || []
                    ])].length : 0
                  }
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-purple-500/10 to-purple-600/5">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-purple-500/20">
                <Sparkles className="h-5 w-5 text-purple-600" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">AI Recommendations</p>
                <p className="text-2xl font-bold text-purple-600">
                  {mockRecommendations.length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-orange-500/10 to-orange-600/5">
          <CardContent className="p-6">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-orange-500/20">
                <AlertTriangle className="h-5 w-5 text-orange-600" />
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Issues Found</p>
                <p className="text-2xl font-bold text-orange-600">
                  {mockRecommendations.filter(r => r.expectedROI < 0).length}
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Main Content Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* AI Recommendations */}
        <div className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Lightbulb className="h-5 w-5 text-yellow-500" />
                AI Recommendations
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {mockRecommendations.slice(0, 3).map((recommendation) => (
                <RecommendationCard
                  key={recommendation.id}
                  recommendation={recommendation}
                  onAccept={handleRecommendationAccept}
                  onReject={handleRecommendationReject}
                  onFeedback={handleRecommendationFeedback}
                  compact={true}
                />
              ))}
              <Button variant="outline" className="w-full">
                ‡∏î‡∏π‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({mockRecommendations.length})
              </Button>
            </CardContent>
          </Card>
        </div>

        {/* AI Predictions */}
        <div className="space-y-6">
          <PredictionChart 
            title="ROI Prediction"
            metric="ROI"
            currentValue={getStatValue('roi', 0)}
            predictedValue={getStatValue('roi', 0) * 1.15}
            confidence={87}
            trend="up"
            timeframe="7 ‡∏ß‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤"
            unit="%"
          />
        </div>
      </div>

      {/* Detailed Recommendations */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Target className="h-5 w-5 text-blue-500" />
            ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          {mockRecommendations.map((recommendation) => (
            <RecommendationCard
              key={recommendation.id}
              recommendation={recommendation}
              onAccept={handleRecommendationAccept}
              onReject={handleRecommendationReject}
              onFeedback={handleRecommendationFeedback}
              compact={false}
            />
          ))}
        </CardContent>
      </Card>
    </div>
  );
}